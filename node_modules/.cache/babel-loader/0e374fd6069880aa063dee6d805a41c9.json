{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Mukki\\\\e-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mukki\\\\e-store\\\\src\\\\content.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //provider\n//consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct\n    };\n\n    this.getItem = id => {\n      return this.state.products.find(item => item.id === id);\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = () => {\n      console.log('Hello from add to cart');\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n    this.handleDetail(id);\n  }\n\n  setProducts() {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = _objectSpread({}, item);\n\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        hadleDetail: this.handleDetail,\n        addToCart: this.addToCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:\\Users\\Mukki\\e-store\\src\\content.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","getItem","id","find","item","handleDetail","product","setState","addToCart","console","log","componentDidMount","setProducts","tempProducts","forEach","singleItem","render","hadleDetail","props","children","ProductConsumer","Consumer"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,aAAN,EAAvB,C,CACA;AACA;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCM,KAFoC,GAE5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJL,MAAAA,aAAa,EAAEA;AAFX,KAF4B;;AAAA,SA8BpCM,OA9BoC,GA8BzBC,EAAD,IAAO;AAEb,aAAO,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAA7C,CAAP;AAEH,KAlCmC;;AAAA,SAoCpCG,YApCoC,GAoCpBH,EAAD,IAAQ;AAEnB,YAAMI,OAAO,GAAG,KAAKL,OAAL,CAAaC,EAAb,CAAhB;AAEA,WAAKK,QAAL,CAAe,MAAM;AAEjB,eAAO;AAACZ,UAAAA,aAAa,EAACW;AAAf,SAAP;AACH,OAHD;AAOH,KA/CmC;;AAAA,SAiDpCE,SAjDoC,GAiDxB,MAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,KAnDmC;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,WAAL;AACA,SAAKP,YAAL,CAAkBH,EAAlB;AACH;;AAEDU,EAAAA,WAAW,GAAE;AAET,QAAIC,YAAY,GAAC,EAAjB;AACAnB,IAAAA,aAAa,CAACoB,OAAd,CAAsBV,IAAI,IAAG;AAEzB,YAAMW,UAAU,qBAAMX,IAAN,CAAhB;;AACAS,MAAAA,YAAY,GAAE,CAAC,GAAGA,YAAJ,EAAiBE,UAAjB,CAAd;AAEH,KALD;AAOA,SAAKR,QAAL,CAAc,MAAI;AACd,aAAO;AAACP,QAAAA,QAAQ,EAACa;AAAV,OAAP;AAEH,KAHD;AAMH;;AA0BDG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,oBACvB,KAAKjB,KADkB;AAE1BkB,QAAAA,WAAW,EAAE,KAAKZ,YAFQ;AAG1BG,QAAAA,SAAS,EAAE,KAAKA;AAHU,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKU,KAAL,CAAWC,QALhB,CADJ;AAWH;;AAlEmC;;AAqExC,MAAMC,eAAe,GAAGxB,cAAc,CAACyB,QAAvC;AAEA,SAASvB,eAAT,EAA0BsB,eAA1B","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { storeProducts, detailProduct } from './data'\r\n\r\nconst ProductContext = React.createContext();\r\n//provider\r\n//consumer\r\n\r\nclass ProductProvider extends Component {\r\n\r\n    state = {\r\n        products: [],\r\n        detailProduct: detailProduct\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setProducts();\r\n        this.handleDetail(id);\r\n    }\r\n\r\n    setProducts(){\r\n\r\n        let tempProducts=[];\r\n        storeProducts.forEach(item =>{\r\n\r\n            const singleItem ={...item};\r\n            tempProducts =[...tempProducts,singleItem];\r\n\r\n        })\r\n\r\n        this.setState(()=>{\r\n            return {products:tempProducts};\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getItem = (id) =>{\r\n\r\n        return this.state.products.find(item => item.id === id)\r\n\r\n    }\r\n\r\n    handleDetail = (id) => {\r\n    \r\n        const product = this.getItem(id)\r\n\r\n        this.setState( () => {\r\n\r\n            return {detailProduct:product}\r\n        }\r\n\r\n        )\r\n        \r\n    }\r\n\r\n    addToCart = () => {\r\n        console.log('Hello from add to cart')\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{\r\n                ...this.state,\r\n                hadleDetail: this.handleDetail,\r\n                addToCart: this.addToCart,\r\n            }}>\r\n                {this.props.children}\r\n\r\n            </ProductContext.Provider>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductProvider, ProductConsumer }"]},"metadata":{},"sourceType":"module"}